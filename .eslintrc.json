{
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:prettier/recommended",
    "plugin:import/recommended"
  ],
  // Specifying Parser
  "parser": "@typescript-eslint/parser",
  // Configuring third-party plugins
  "plugins": ["react", "react-hooks", "@typescript-eslint"],
  // Resolve imports
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      }
    },
    "react": {
      "version": "18.x"
    }
  },
  "rules": {
    "linebreak-style": "off",
    "radix": "error",
    "no-new-wrappers": "error",
    "curly": "error",
    "no-mixed-operators": "warn",
    // Configure prettier
    "prettier/prettier": [
      "error",
      {
        "arrowParens": "always",
        "bracketSpacing": true,
        "printWidth": 160,
        "endOfLine": "auto",
        "singleQuote": true,
        "tabWidth": 4,
        "indentStyle": "space",
        "useTabs": false,
        "importOrderSeparation": true,
        "proseWrap": "never",
        "quoteProps": "preserve",
        "semi": true,
        "trailingComma": "none"
      }
    ],
    // Disallow the `any` type.
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    "react-hooks/exhaustive-deps": "off",
    // Enforce the use of the shorthand syntax.
    "object-shorthand": "error",
    "no-console": "warn",

    //Configure react
    "react/jsx-no-useless-fragment": "warn",
    "react/jsx-no-bind": [
      "warn",
      {
        "ignoreDOMComponents": false,
        "ignoreRefs": false,
        "allowArrowFunctions": false,
        "allowFunctions": true,
        "allowBind": false
      }
    ],
    "react/jsx-wrap-multilines": [
      "error",
      {
        "declaration": "parens-new-line",
        "assignment": "parens-new-line",
        "return": "parens-new-line",
        "arrow": "parens-new-line",
        "condition": "parens-new-line",
        "logical": "parens-new-line",
        "prop": "parens-new-line"
      }
    ],
    "react/display-name": "warn",
    "react/prop-types": "off",
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": false
      }
    ],
    "max-len": [
      "error",
      {
        "code": 160
      }
    ],
    "react/no-this-in-sfc": "error",
    "no-trailing-spaces": ["warn"],
    "react-hooks/rules-of-hooks": "warn"
  }
}
